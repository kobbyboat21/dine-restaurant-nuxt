export async function detectBreakpoint(cookie, userAgent) {
  try {
    if (cookie && cookie in this.breakpoints) {
      return cookie;
    }
    if (!userAgent) {
      return this.fallbackBreakpoint;
    }
    const { default: Bowser } = await import(
      /* webpackChunkName: "bowser" */
      "bowser"
    );
    const parser = Bowser.getParser(userAgent);
    const deviceType = parser.getPlatformType();
    if (deviceType in this.defaultBreakpoints) {
      return this.defaultBreakpoints[deviceType];
    }
    return this.fallbackBreakpoint;
  } catch (error) {
    console.error(error);
    return this.fallbackBreakpoint;
  }
}
export function parseCookie(input) {
  if (!input.length) {
    return {};
  }
  return Object.fromEntries(input.split(/; */).map((cookie) => cookie.split("=", 2)));
}
