{
  "resolvedId": "/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/node_modules/date-fns/getOverlappingDaysInIntervals.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { millisecondsInDay } from \"./constants.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getOverlappingDaysInIntervals\n * @category Interval Helpers\n * @summary Get the number of days that overlap in two time intervals\n *\n * @description\n * Get the number of days that overlap in two time intervals. It uses the time\n * between dates to calculate the number of days, rounding it up to include\n * partial days.\n *\n * Two equal 0-length intervals will result in 0. Two equal 1ms intervals will\n * result in 1.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param intervalLeft - The first interval to compare.\n * @param intervalRight - The second interval to compare.\n *\n * @returns The number of days that overlap in two time intervals\n *\n * @example\n * // For overlapping time intervals adds 1 for each started overlapping day:\n * getOverlappingDaysInIntervals(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n * )\n * //=> 3\n *\n * @example\n * // For non-overlapping time intervals returns 0:\n * getOverlappingDaysInIntervals(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n * )\n * //=> 0\n */\n\nexport function getOverlappingDaysInIntervals(intervalLeft, intervalRight) {\n  const [leftStart, leftEnd] = [\n    +toDate(intervalLeft.start),\n    +toDate(intervalLeft.end),\n  ].sort((a, b) => a - b);\n  const [rightStart, rightEnd] = [\n    +toDate(intervalRight.start),\n    +toDate(intervalRight.end),\n  ].sort((a, b) => a - b);\n\n  // Prevent NaN result if intervals don't overlap at all.\n  const isOverlapping = leftStart < rightEnd && rightStart < leftEnd;\n  if (!isOverlapping) return 0;\n\n  // Remove the timezone offset to negate the DST effect on calculations.\n  const overlapLeft = rightStart < leftStart ? leftStart : rightStart;\n  const left = overlapLeft - getTimezoneOffsetInMilliseconds(overlapLeft);\n  const overlapRight = rightEnd > leftEnd ? leftEnd : rightEnd;\n  const right = overlapRight - getTimezoneOffsetInMilliseconds(overlapRight);\n\n  // Ceil the number to include partial days too.\n  return Math.ceil((right - left) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default getOverlappingDaysInIntervals;\n",
      "start": 1717261248848,
      "end": 1717261248895,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717261248895,
      "end": 1717261248895,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1717261248896,
      "end": 1717261248896,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717261248897,
      "end": 1717261248897,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717261248897,
      "end": 1717261248897,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717261248897,
      "end": 1717261248897,
      "order": "normal"
    }
  ]
}
