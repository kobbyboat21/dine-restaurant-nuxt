{
  "resolvedId": "/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/node_modules/date-fns/formatDistanceToNowStrict.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { formatDistanceStrict } from \"./formatDistanceStrict.mjs\";\n\n/**\n * The {@link formatDistanceToNowStrict} function options.\n */\n\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * const result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\nexport function formatDistanceToNowStrict(date, options) {\n  return formatDistanceStrict(date, Date.now(), options);\n}\n\n// Fallback for modularized imports:\nexport default formatDistanceToNowStrict;\n",
      "start": 1717261248791,
      "end": 1717261248839,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717261248839,
      "end": 1717261248839,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717261248839,
      "end": 1717261248839,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717261248839,
      "end": 1717261248839,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717261248839,
      "end": 1717261248839,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1717261248839,
      "end": 1717261248839,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1717261248839,
      "end": 1717261248839,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717261248839,
      "end": 1717261248839,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1717261248839,
      "end": 1717261248839,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717261248839,
      "end": 1717261248839,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261248839,
      "end": 1717261248839,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717261248839,
      "end": 1717261248839,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1717261248839,
      "end": 1717261248840,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717261248840,
      "end": 1717261248840,
      "order": "normal"
    }
  ]
}
