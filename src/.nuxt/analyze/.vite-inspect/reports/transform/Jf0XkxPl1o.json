{
  "resolvedId": "/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/node_modules/@nuxt/ui/dist/runtime/components/overlays/Popover.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <!-- eslint-disable-next-line vue/no-template-shadow -->\n  <HPopover ref=\"popover\" v-slot=\"{ open, close }\" :class=\"ui.wrapper\" v-bind=\"attrs\" @mouseleave=\"onMouseLeave\">\n    <HPopoverButton\n      ref=\"trigger\"\n      as=\"div\"\n      :disabled=\"disabled\"\n      :class=\"ui.trigger\"\n      role=\"button\"\n      @mouseover=\"onMouseOver\"\n    >\n      <slot :open=\"open\" :close=\"close\">\n        <button :disabled=\"disabled\">\n          Open\n        </button>\n      </slot>\n    </HPopoverButton>\n\n    <Transition v-if=\"overlay\" appear v-bind=\"ui.overlay.transition\">\n      <div v-if=\"open\" :class=\"[ui.overlay.base, ui.overlay.background]\" />\n    </Transition>\n\n    <div v-if=\"open\" ref=\"container\" :class=\"[ui.container, ui.width]\" :style=\"containerStyle\" @mouseover=\"onMouseOver\">\n      <Transition appear v-bind=\"ui.transition\">\n        <div>\n          <div v-if=\"popper.arrow\" data-popper-arrow :class=\"Object.values(ui.arrow)\" />\n\n          <HPopoverPanel :class=\"[ui.base, ui.background, ui.ring, ui.rounded, ui.shadow]\" static>\n            <slot name=\"panel\" :open=\"open\" :close=\"close\" />\n          </HPopoverPanel>\n        </div>\n      </Transition>\n    </div>\n  </HPopover>\n</template>\n\n<script>\nimport { computed, ref, toRef, onMounted, defineComponent, watch } from \"vue\";\nimport { defu } from \"defu\";\nimport { Popover as HPopover, PopoverButton as HPopoverButton, PopoverPanel as HPopoverPanel } from \"@headlessui/vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { usePopper } from \"../../composables/usePopper\";\nimport { mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { popover } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.popover, popover);\nexport default defineComponent({\n  components: {\n    HPopover,\n    HPopoverButton,\n    HPopoverPanel\n  },\n  inheritAttrs: false,\n  props: {\n    mode: {\n      type: String,\n      default: \"click\",\n      validator: (value) => [\"click\", \"hover\"].includes(value)\n    },\n    open: {\n      type: Boolean,\n      default: void 0\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    openDelay: {\n      type: Number,\n      default: 0\n    },\n    closeDelay: {\n      type: Number,\n      default: 0\n    },\n    overlay: {\n      type: Boolean,\n      default: false\n    },\n    popper: {\n      type: Object,\n      default: () => ({})\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:open\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"popover\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const popper = computed(() => defu(props.mode === \"hover\" ? { offsetDistance: 0 } : {}, props.popper, ui.value.popper));\n    const [trigger, container] = usePopper(popper.value);\n    const popover2 = ref(null);\n    const popoverApi = ref(null);\n    let openTimeout = null;\n    let closeTimeout = null;\n    onMounted(() => {\n      const popoverProvides = popover2.value?.$.provides;\n      if (!popoverProvides) {\n        return;\n      }\n      const popoverProvidesSymbols = Object.getOwnPropertySymbols(popoverProvides);\n      popoverApi.value = popoverProvidesSymbols.length && popoverProvides[popoverProvidesSymbols[0]];\n      if (props.open) {\n        popoverApi.value?.togglePopover();\n      }\n    });\n    const containerStyle = computed(() => {\n      if (props.mode !== \"hover\") {\n        return {};\n      }\n      const offsetDistance = props.popper?.offsetDistance || ui.value.popper?.offsetDistance || 8;\n      const placement = popper.value.placement?.split(\"-\")[0];\n      const padding = `${offsetDistance}px`;\n      if (placement === \"top\" || placement === \"bottom\") {\n        return {\n          paddingTop: padding,\n          paddingBottom: padding\n        };\n      } else if (placement === \"left\" || placement === \"right\") {\n        return {\n          paddingLeft: padding,\n          paddingRight: padding\n        };\n      } else {\n        return {\n          paddingTop: padding,\n          paddingBottom: padding,\n          paddingLeft: padding,\n          paddingRight: padding\n        };\n      }\n    });\n    function onMouseOver() {\n      if (props.mode !== \"hover\" || !popoverApi.value) {\n        return;\n      }\n      if (closeTimeout) {\n        clearTimeout(closeTimeout);\n        closeTimeout = null;\n      }\n      if (popoverApi.value.popoverState === 0) {\n        return;\n      }\n      openTimeout = openTimeout || setTimeout(() => {\n        popoverApi.value.togglePopover && popoverApi.value.togglePopover();\n        openTimeout = null;\n      }, props.openDelay);\n    }\n    function onMouseLeave() {\n      if (props.mode !== \"hover\" || !popoverApi.value) {\n        return;\n      }\n      if (openTimeout) {\n        clearTimeout(openTimeout);\n        openTimeout = null;\n      }\n      if (popoverApi.value.popoverState === 1) {\n        return;\n      }\n      closeTimeout = closeTimeout || setTimeout(() => {\n        popoverApi.value.closePopover && popoverApi.value.closePopover();\n        closeTimeout = null;\n      }, props.closeDelay);\n    }\n    watch(() => props.open, (newValue, oldValue) => {\n      if (!popoverApi.value)\n        return;\n      if (oldValue === void 0 || newValue === oldValue)\n        return;\n      if (newValue) {\n        popoverApi.value.popoverState = 0;\n      } else {\n        popoverApi.value.closePopover();\n      }\n    });\n    watch(() => popoverApi.value?.popoverState, (newValue, oldValue) => {\n      if (oldValue === void 0 || newValue === oldValue)\n        return;\n      emit(\"update:open\", newValue === 0);\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      popover: popover2,\n      // eslint-disable-next-line vue/no-dupe-keys\n      popper,\n      trigger,\n      container,\n      containerStyle,\n      onMouseOver,\n      onMouseLeave\n    };\n  }\n});\n</script>\n",
      "start": 1717261247543,
      "end": 1717261247934,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717261247934,
      "end": 1717261247934,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717261247934,
      "end": 1717261247934,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717261247934,
      "end": 1717261247934,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717261247935,
      "end": 1717261247935,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1717261247935,
      "end": 1717261247935,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1717261247935,
      "end": 1717261247935,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717261247935,
      "end": 1717261247935,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\nimport { computed, ref, toRef, onMounted, defineComponent, watch } from \"vue\";\nimport { defu } from \"defu\";\nimport { Popover as HPopover, PopoverButton as HPopoverButton, PopoverPanel as HPopoverPanel } from \"@headlessui/vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { usePopper } from \"../../composables/usePopper\";\nimport { mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { popover } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.popover, popover);\nconst _sfc_main = defineComponent({\n  components: {\n    HPopover,\n    HPopoverButton,\n    HPopoverPanel\n  },\n  inheritAttrs: false,\n  props: {\n    mode: {\n      type: String,\n      default: \"click\",\n      validator: (value) => [\"click\", \"hover\"].includes(value)\n    },\n    open: {\n      type: Boolean,\n      default: void 0\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    openDelay: {\n      type: Number,\n      default: 0\n    },\n    closeDelay: {\n      type: Number,\n      default: 0\n    },\n    overlay: {\n      type: Boolean,\n      default: false\n    },\n    popper: {\n      type: Object,\n      default: () => ({})\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:open\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"popover\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const popper = computed(() => defu(props.mode === \"hover\" ? { offsetDistance: 0 } : {}, props.popper, ui.value.popper));\n    const [trigger, container] = usePopper(popper.value);\n    const popover2 = ref(null);\n    const popoverApi = ref(null);\n    let openTimeout = null;\n    let closeTimeout = null;\n    onMounted(() => {\n      const popoverProvides = popover2.value?.$.provides;\n      if (!popoverProvides) {\n        return;\n      }\n      const popoverProvidesSymbols = Object.getOwnPropertySymbols(popoverProvides);\n      popoverApi.value = popoverProvidesSymbols.length && popoverProvides[popoverProvidesSymbols[0]];\n      if (props.open) {\n        popoverApi.value?.togglePopover();\n      }\n    });\n    const containerStyle = computed(() => {\n      if (props.mode !== \"hover\") {\n        return {};\n      }\n      const offsetDistance = props.popper?.offsetDistance || ui.value.popper?.offsetDistance || 8;\n      const placement = popper.value.placement?.split(\"-\")[0];\n      const padding = `${offsetDistance}px`;\n      if (placement === \"top\" || placement === \"bottom\") {\n        return {\n          paddingTop: padding,\n          paddingBottom: padding\n        };\n      } else if (placement === \"left\" || placement === \"right\") {\n        return {\n          paddingLeft: padding,\n          paddingRight: padding\n        };\n      } else {\n        return {\n          paddingTop: padding,\n          paddingBottom: padding,\n          paddingLeft: padding,\n          paddingRight: padding\n        };\n      }\n    });\n    function onMouseOver() {\n      if (props.mode !== \"hover\" || !popoverApi.value) {\n        return;\n      }\n      if (closeTimeout) {\n        clearTimeout(closeTimeout);\n        closeTimeout = null;\n      }\n      if (popoverApi.value.popoverState === 0) {\n        return;\n      }\n      openTimeout = openTimeout || setTimeout(() => {\n        popoverApi.value.togglePopover && popoverApi.value.togglePopover();\n        openTimeout = null;\n      }, props.openDelay);\n    }\n    function onMouseLeave() {\n      if (props.mode !== \"hover\" || !popoverApi.value) {\n        return;\n      }\n      if (openTimeout) {\n        clearTimeout(openTimeout);\n        openTimeout = null;\n      }\n      if (popoverApi.value.popoverState === 1) {\n        return;\n      }\n      closeTimeout = closeTimeout || setTimeout(() => {\n        popoverApi.value.closePopover && popoverApi.value.closePopover();\n        closeTimeout = null;\n      }, props.closeDelay);\n    }\n    watch(() => props.open, (newValue, oldValue) => {\n      if (!popoverApi.value)\n        return;\n      if (oldValue === void 0 || newValue === oldValue)\n        return;\n      if (newValue) {\n        popoverApi.value.popoverState = 0;\n      } else {\n        popoverApi.value.closePopover();\n      }\n    });\n    watch(() => popoverApi.value?.popoverState, (newValue, oldValue) => {\n      if (oldValue === void 0 || newValue === oldValue)\n        return;\n      emit(\"update:open\", newValue === 0);\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      popover: popover2,\n      // eslint-disable-next-line vue/no-dupe-keys\n      popper,\n      trigger,\n      container,\n      containerStyle,\n      onMouseOver,\n      onMouseLeave\n    };\n  }\n});\n\nimport { renderSlot as _renderSlot, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Transition as _Transition, mergeProps as _mergeProps, createBlock as _createBlock, normalizeStyle as _normalizeStyle } from \"vue\"\n\nconst _hoisted_1 = [\"disabled\"]\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HPopoverButton = _resolveComponent(\"HPopoverButton\")\n  const _component_HPopoverPanel = _resolveComponent(\"HPopoverPanel\")\n  const _component_HPopover = _resolveComponent(\"HPopover\")\n\n  return (_openBlock(), _createBlock(_component_HPopover, _mergeProps({\n    ref: \"popover\",\n    class: _ctx.ui.wrapper\n  }, _ctx.attrs, { onMouseleave: _ctx.onMouseLeave }), {\n    default: _withCtx(({ open, close }) => [\n      _createVNode(_component_HPopoverButton, {\n        ref: \"trigger\",\n        as: \"div\",\n        disabled: _ctx.disabled,\n        class: _normalizeClass(_ctx.ui.trigger),\n        role: \"button\",\n        onMouseover: _ctx.onMouseOver\n      }, {\n        default: _withCtx(() => [\n          _renderSlot(_ctx.$slots, \"default\", {\n            open: open,\n            close: close\n          }, () => [\n            _createElementVNode(\"button\", { disabled: _ctx.disabled }, \" Open \", 8, _hoisted_1)\n          ])\n        ]),\n        _: 2\n      }, 1032, [\"disabled\", \"class\", \"onMouseover\"]),\n      (_ctx.overlay)\n        ? (_openBlock(), _createBlock(_Transition, _mergeProps({\n            key: 0,\n            appear: \"\"\n          }, _ctx.ui.overlay.transition), {\n            default: _withCtx(() => [\n              open\n                ? (_openBlock(), _createElementBlock(\"div\", {\n                    key: 0,\n                    class: _normalizeClass([_ctx.ui.overlay.base, _ctx.ui.overlay.background])\n                  }, null, 2))\n                : _createCommentVNode(\"\", true)\n            ]),\n            _: 2\n          }, 1040))\n        : _createCommentVNode(\"\", true),\n      open\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 1,\n            ref: \"container\",\n            class: _normalizeClass([_ctx.ui.container, _ctx.ui.width]),\n            style: _normalizeStyle(_ctx.containerStyle),\n            onMouseover: _cache[0] || (_cache[0] = (...args) => (_ctx.onMouseOver && _ctx.onMouseOver(...args)))\n          }, [\n            _createVNode(_Transition, _mergeProps({ appear: \"\" }, _ctx.ui.transition), {\n              default: _withCtx(() => [\n                _createElementVNode(\"div\", null, [\n                  (_ctx.popper.arrow)\n                    ? (_openBlock(), _createElementBlock(\"div\", {\n                        key: 0,\n                        \"data-popper-arrow\": \"\",\n                        class: _normalizeClass(Object.values(_ctx.ui.arrow))\n                      }, null, 2))\n                    : _createCommentVNode(\"\", true),\n                  _createVNode(_component_HPopoverPanel, {\n                    class: _normalizeClass([_ctx.ui.base, _ctx.ui.background, _ctx.ui.ring, _ctx.ui.rounded, _ctx.ui.shadow]),\n                    static: \"\"\n                  }, {\n                    default: _withCtx(() => [\n                      _renderSlot(_ctx.$slots, \"panel\", {\n                        open: open,\n                        close: close\n                      })\n                    ]),\n                    _: 2\n                  }, 1032, [\"class\"])\n                ])\n              ]),\n              _: 2\n            }, 1040)\n          ], 38))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _: 3\n  }, 16, [\"class\", \"onMouseleave\"]))\n}\n\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])",
      "start": 1717261247935,
      "end": 1717261247946,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717261247946,
      "end": 1717261247946,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261247946,
      "end": 1717261247946,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717261247946,
      "end": 1717261247946,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1717261247947,
      "end": 1717261247947,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1717261247947,
      "end": 1717261247947,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261247947,
      "end": 1717261247947,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717261247947,
      "end": 1717261247947,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717261247947,
      "end": 1717261247947,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717261247947,
      "end": 1717261247947,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717261247947,
      "end": 1717261247947,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717261247947,
      "end": 1717261247947,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717261247947,
      "end": 1717261247947,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1717261247947,
      "end": 1717261247947,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717261247947,
      "end": 1717261247947,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717261247947,
      "end": 1717261247947,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717261247947,
      "end": 1717261247947,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717261247947,
      "end": 1717261247947,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717261247947,
      "end": 1717261247947,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717261247947,
      "end": 1717261247947,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1717261247947,
      "end": 1717261247947,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1717261247947,
      "end": 1717261247947,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1717261247947,
      "end": 1717261247948,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717261247948,
      "end": 1717261247948,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717261247948,
      "end": 1717261247948,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717261247948,
      "end": 1717261247948,
      "order": "normal"
    }
  ]
}
