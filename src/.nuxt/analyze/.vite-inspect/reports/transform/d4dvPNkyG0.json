{
  "resolvedId": "/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/node_modules/date-fns/formatRelative.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { format } from \"./format.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link formatRelative} function options.\n */\n\n/**\n * @name formatRelative\n * @category Common Helpers\n * @summary Represent the date in words relative to the given base date.\n *\n * @description\n * Represent the date in words relative to the given base date.\n *\n * | Distance to the base date | Result                    |\n * |---------------------------|---------------------------|\n * | Previous 6 days           | last Sunday at 04:30 AM   |\n * | Last day                  | yesterday at 04:30 AM     |\n * | Same day                  | today at 04:30 AM         |\n * | Next day                  | tomorrow at 04:30 AM      |\n * | Next 6 days               | Sunday at 04:30 AM        |\n * | Other                     | 12/31/2017                |\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to format\n * @param baseDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The date in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws `options.locale` must contain `formatRelative` property\n *\n * @example\n * // Represent the date of 6 days ago in words relative to the given base date. In this example, today is Wednesday\n * const result = formatRelative(subDays(new Date(), 6), new Date())\n * //=> \"last Thursday at 12:45 AM\"\n */\nexport function formatRelative(date, baseDate, options) {\n  const _date = toDate(date);\n  const _baseDate = toDate(baseDate);\n\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const diff = differenceInCalendarDays(_date, _baseDate);\n\n  if (isNaN(diff)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let token;\n  if (diff < -6) {\n    token = \"other\";\n  } else if (diff < -1) {\n    token = \"lastWeek\";\n  } else if (diff < 0) {\n    token = \"yesterday\";\n  } else if (diff < 1) {\n    token = \"today\";\n  } else if (diff < 2) {\n    token = \"tomorrow\";\n  } else if (diff < 7) {\n    token = \"nextWeek\";\n  } else {\n    token = \"other\";\n  }\n\n  const formatStr = locale.formatRelative(token, _date, _baseDate, {\n    locale,\n    weekStartsOn,\n  });\n  return format(_date, formatStr, { locale, weekStartsOn });\n}\n\n// Fallback for modularized imports:\nexport default formatRelative;\n",
      "start": 1717261248811,
      "end": 1717261248855,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717261248855,
      "end": 1717261248855,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717261248855,
      "end": 1717261248855,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717261248855,
      "end": 1717261248855,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717261248855,
      "end": 1717261248855,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1717261248855,
      "end": 1717261248855,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1717261248855,
      "end": 1717261248855,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717261248855,
      "end": 1717261248855,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1717261248855,
      "end": 1717261248855,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717261248855,
      "end": 1717261248855,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261248855,
      "end": 1717261248855,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717261248855,
      "end": 1717261248855,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1717261248855,
      "end": 1717261248855,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1717261248855,
      "end": 1717261248855,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261248855,
      "end": 1717261248855,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717261248855,
      "end": 1717261248855,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717261248855,
      "end": 1717261248856,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717261248856,
      "end": 1717261248856,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717261248856,
      "end": 1717261248856,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717261248856,
      "end": 1717261248856,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717261248856,
      "end": 1717261248856,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1717261248856,
      "end": 1717261248856,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717261248856,
      "end": 1717261248856,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717261248856,
      "end": 1717261248856,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717261248856,
      "end": 1717261248856,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717261248856,
      "end": 1717261248856,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717261248856,
      "end": 1717261248856,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717261248856,
      "end": 1717261248856,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1717261248856,
      "end": 1717261248856,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1717261248856,
      "end": 1717261248856,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1717261248856,
      "end": 1717261248856,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717261248856,
      "end": 1717261248856,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717261248856,
      "end": 1717261248856,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717261248856,
      "end": 1717261248856,
      "order": "normal"
    }
  ]
}
