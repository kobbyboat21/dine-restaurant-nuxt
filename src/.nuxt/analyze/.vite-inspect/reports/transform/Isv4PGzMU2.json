{
  "resolvedId": "/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/node_modules/date-fns/formatISO.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { toDate } from \"./toDate.mjs\";\nimport { addLeadingZeros } from \"./_lib/addLeadingZeros.mjs\";\n\n/**\n * The {@link formatISO} function options.\n */\n\n/**\n * @name formatISO\n * @category Common Helpers\n * @summary Format the date according to the ISO 8601 standard (https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).\n *\n * @description\n * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options.\n *\n * @returns The formatted date string (in loca.l time zone)\n *\n * @throws `date` must not be Invalid Date\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601, short format (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918T190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, date only:\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, time only (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52Z'\n */\nexport function formatISO(date, options) {\n  const _date = toDate(date);\n\n  if (isNaN(_date.getTime())) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  const format = options?.format ?? \"extended\";\n  const representation = options?.representation ?? \"complete\";\n\n  let result = \"\";\n  let tzOffset = \"\";\n\n  const dateDelimiter = format === \"extended\" ? \"-\" : \"\";\n  const timeDelimiter = format === \"extended\" ? \":\" : \"\";\n\n  // Representation is either 'date' or 'complete'\n  if (representation !== \"time\") {\n    const day = addLeadingZeros(_date.getDate(), 2);\n    const month = addLeadingZeros(_date.getMonth() + 1, 2);\n    const year = addLeadingZeros(_date.getFullYear(), 4);\n\n    // yyyyMMdd or yyyy-MM-dd.\n    result = `${year}${dateDelimiter}${month}${dateDelimiter}${day}`;\n  }\n\n  // Representation is either 'time' or 'complete'\n  if (representation !== \"date\") {\n    // Add the timezone.\n    const offset = _date.getTimezoneOffset();\n\n    if (offset !== 0) {\n      const absoluteOffset = Math.abs(offset);\n      const hourOffset = addLeadingZeros(Math.trunc(absoluteOffset / 60), 2);\n      const minuteOffset = addLeadingZeros(absoluteOffset % 60, 2);\n      // If less than 0, the sign is +, because it is ahead of time.\n      const sign = offset < 0 ? \"+\" : \"-\";\n\n      tzOffset = `${sign}${hourOffset}:${minuteOffset}`;\n    } else {\n      tzOffset = \"Z\";\n    }\n\n    const hour = addLeadingZeros(_date.getHours(), 2);\n    const minute = addLeadingZeros(_date.getMinutes(), 2);\n    const second = addLeadingZeros(_date.getSeconds(), 2);\n\n    // If there's also date, separate it with time with 'T'\n    const separator = result === \"\" ? \"\" : \"T\";\n\n    // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.\n    const time = [hour, minute, second].join(timeDelimiter);\n\n    // HHmmss or HH:mm:ss.\n    result = `${result}${separator}${time}${tzOffset}`;\n  }\n\n  return result;\n}\n\n// Fallback for modularized imports:\nexport default formatISO;\n",
      "start": 1717261248795,
      "end": 1717261248843,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717261248843,
      "end": 1717261248843,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717261248843,
      "end": 1717261248843,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717261248843,
      "end": 1717261248843,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717261248843,
      "end": 1717261248843,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1717261248843,
      "end": 1717261248843,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1717261248843,
      "end": 1717261248843,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717261248843,
      "end": 1717261248843,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1717261248843,
      "end": 1717261248843,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717261248843,
      "end": 1717261248843,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261248843,
      "end": 1717261248843,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717261248843,
      "end": 1717261248843,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1717261248843,
      "end": 1717261248843,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1717261248843,
      "end": 1717261248844,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261248844,
      "end": 1717261248844,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717261248844,
      "end": 1717261248844,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717261248844,
      "end": 1717261248844,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717261248844,
      "end": 1717261248844,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717261248844,
      "end": 1717261248844,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717261248844,
      "end": 1717261248844,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717261248844,
      "end": 1717261248844,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1717261248844,
      "end": 1717261248844,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717261248844,
      "end": 1717261248844,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717261248844,
      "end": 1717261248844,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717261248844,
      "end": 1717261248844,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717261248844,
      "end": 1717261248844,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717261248844,
      "end": 1717261248844,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717261248844,
      "end": 1717261248844,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1717261248844,
      "end": 1717261248844,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1717261248844,
      "end": 1717261248844,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1717261248844,
      "end": 1717261248844,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717261248844,
      "end": 1717261248844,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717261248844,
      "end": 1717261248844,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717261248844,
      "end": 1717261248844,
      "order": "normal"
    }
  ]
}
