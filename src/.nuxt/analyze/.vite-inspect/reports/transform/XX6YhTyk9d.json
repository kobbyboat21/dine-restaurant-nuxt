{
  "resolvedId": "/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/node_modules/date-fns/intlFormat.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { toDate } from \"./toDate.mjs\";\n\n/**\n * The locale string (see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locales_argument).\n */\n\n/**\n * The format options (see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat#options)\n */\n\n/**\n * The locale options.\n */\n\n/**\n * @name intlFormat\n * @category Common Helpers\n * @summary Format the date with Intl.DateTimeFormat (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat).\n *\n * @description\n * Return the formatted date string in the given format.\n * The method uses [`Intl.DateTimeFormat`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat) inside.\n * formatOptions are the same as [`Intl.DateTimeFormat` options](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat#using_options)\n *\n * > ⚠️ Please note that before Node version 13.0.0, only the locale data for en-US is available by default.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to format\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n *\n * @example\n * // Represent 10 October 2019 in middle-endian format:\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456))\n * //=> 10/4/2019\n */\n\n/**\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to format\n * @param localeOptions - An object with locale\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n *\n * @example\n * // Represent 10 October 2019 in Korean.\n * // Convert the date with locale's options.\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *   locale: 'ko-KR',\n * })\n * //=> 2019. 10. 4.\n */\n\n/**\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to format\n * @param formatOptions - The format options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n *\n * @example\n * // Represent 10 October 2019.\n * // Convert the date with format's options.\n * const result = intlFormat.default(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *   year: 'numeric',\n *   month: 'numeric',\n *   day: 'numeric',\n *   hour: 'numeric',\n * })\n * //=> 10/4/2019, 12 PM\n */\n\n/**\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to format\n * @param formatOptions - The format options\n * @param localeOptions - An object with locale\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n *\n * @example\n * // Represent 10 October 2019 in German.\n * // Convert the date with format's options and locale's options.\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *   weekday: 'long',\n *   year: 'numeric',\n *   month: 'long',\n *   day: 'numeric',\n * }, {\n *   locale: 'de-DE',\n * })\n * //=> Freitag, 4. Oktober 2019\n */\n\nexport function intlFormat(date, formatOrLocale, localeOptions) {\n  let formatOptions;\n\n  if (isFormatOptions(formatOrLocale)) {\n    formatOptions = formatOrLocale;\n  } else {\n    localeOptions = formatOrLocale;\n  }\n\n  return new Intl.DateTimeFormat(localeOptions?.locale, formatOptions).format(\n    toDate(date),\n  );\n}\n\nfunction isFormatOptions(opts) {\n  return opts !== undefined && !(\"locale\" in opts);\n}\n\n// Fallback for modularized imports:\nexport default intlFormat;\n",
      "start": 1717261248885,
      "end": 1717261248938,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717261248938,
      "end": 1717261248938,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717261248938,
      "end": 1717261248938,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717261248938,
      "end": 1717261248938,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717261248938,
      "end": 1717261248938,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1717261248938,
      "end": 1717261248938,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1717261248938,
      "end": 1717261248938,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717261248938,
      "end": 1717261248938,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1717261248938,
      "end": 1717261248938,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717261248938,
      "end": 1717261248938,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261248938,
      "end": 1717261248938,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717261248938,
      "end": 1717261248938,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1717261248938,
      "end": 1717261248938,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1717261248938,
      "end": 1717261248938,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261248938,
      "end": 1717261248938,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717261248938,
      "end": 1717261248938,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717261248938,
      "end": 1717261248939,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717261248939,
      "end": 1717261248939,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717261248939,
      "end": 1717261248939,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717261248939,
      "end": 1717261248939,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717261248939,
      "end": 1717261248939,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1717261248939,
      "end": 1717261248939,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717261248939,
      "end": 1717261248939,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717261248939,
      "end": 1717261248939,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717261248939,
      "end": 1717261248939,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717261248939,
      "end": 1717261248939,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717261248939,
      "end": 1717261248939,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717261248939,
      "end": 1717261248939,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1717261248939,
      "end": 1717261248939,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1717261248939,
      "end": 1717261248939,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1717261248939,
      "end": 1717261248939,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717261248939,
      "end": 1717261248939,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717261248939,
      "end": 1717261248939,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717261248939,
      "end": 1717261248939,
      "order": "normal"
    }
  ]
}
