{
  "resolvedId": "/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/node_modules/date-fns/parseJSON.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * @name parseJSON\n * @category Common Helpers\n * @summary Parse a JSON date string\n *\n * @description\n * Converts a complete ISO date string in UTC time, the typical format for transmitting\n * a date in JSON, to a JavaScript `Date` instance.\n *\n * This is a minimal implementation for converting dates retrieved from a JSON API to\n * a `Date` instance which can be used with other functions in the `date-fns` library.\n * The following formats are supported:\n *\n * - `2000-03-15T05:20:10.123Z`: The output of `.toISOString()` and `JSON.stringify(new Date())`\n * - `2000-03-15T05:20:10Z`: Without milliseconds\n * - `2000-03-15T05:20:10+00:00`: With a zero offset, the default JSON encoded format in some other languages\n * - `2000-03-15T05:20:10+05:45`: With a positive or negative offset, the default JSON encoded format in some other languages\n * - `2000-03-15T05:20:10+0000`: With a zero offset without a colon\n * - `2000-03-15T05:20:10`: Without a trailing 'Z' symbol\n * - `2000-03-15T05:20:10.1234567`: Up to 7 digits in milliseconds field. Only first 3 are taken into account since JS does not allow fractional milliseconds\n * - `2000-03-15 05:20:10`: With a space instead of a 'T' separator for APIs returning a SQL date without reformatting\n *\n * For convenience and ease of use these other input types are also supported\n * via [toDate](https://date-fns.org/docs/toDate):\n *\n * - A `Date` instance will be cloned\n * - A `number` will be treated as a timestamp\n *\n * Any other input type or invalid date strings will return an `Invalid Date`.\n *\n * @param dateStr - A fully formed ISO8601 date string to convert\n *\n * @returns The parsed date in the local time zone\n */\nexport function parseJSON(dateStr) {\n  const parts = dateStr.match(\n    /(\\d{4})-(\\d{2})-(\\d{2})[T ](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d{0,7}))?(?:Z|(.)(\\d{2}):?(\\d{2})?)?/,\n  );\n  if (parts) {\n    // Group 8 matches the sign\n    return new Date(\n      Date.UTC(\n        +parts[1],\n        +parts[2] - 1,\n        +parts[3],\n        +parts[4] - (+parts[9] || 0) * (parts[8] == \"-\" ? -1 : 1),\n        +parts[5] - (+parts[10] || 0) * (parts[8] == \"-\" ? -1 : 1),\n        +parts[6],\n        +((parts[7] || \"0\") + \"00\").substring(0, 3),\n      ),\n    );\n  }\n  return new Date(NaN);\n}\n\n// Fallback for modularized imports:\nexport default parseJSON;\n",
      "start": 1717261249049,
      "end": 1717261249103,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717261249103,
      "end": 1717261249103,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717261249103,
      "end": 1717261249103,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717261249103,
      "end": 1717261249103,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717261249103,
      "end": 1717261249103,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1717261249103,
      "end": 1717261249103,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1717261249103,
      "end": 1717261249103,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717261249103,
      "end": 1717261249103,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1717261249103,
      "end": 1717261249103,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717261249103,
      "end": 1717261249103,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261249103,
      "end": 1717261249103,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717261249103,
      "end": 1717261249103,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1717261249103,
      "end": 1717261249103,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1717261249103,
      "end": 1717261249104,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261249104,
      "end": 1717261249104,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717261249104,
      "end": 1717261249104,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717261249104,
      "end": 1717261249104,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717261249104,
      "end": 1717261249104,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717261249104,
      "end": 1717261249104,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717261249104,
      "end": 1717261249104,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717261249104,
      "end": 1717261249104,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1717261249104,
      "end": 1717261249104,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717261249104,
      "end": 1717261249104,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717261249104,
      "end": 1717261249104,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717261249104,
      "end": 1717261249104,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717261249104,
      "end": 1717261249104,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717261249104,
      "end": 1717261249104,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717261249104,
      "end": 1717261249104,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1717261249104,
      "end": 1717261249104,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1717261249104,
      "end": 1717261249104,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1717261249104,
      "end": 1717261249104,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717261249104,
      "end": 1717261249104,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717261249104,
      "end": 1717261249104,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717261249104,
      "end": 1717261249104,
      "order": "normal"
    }
  ]
}
