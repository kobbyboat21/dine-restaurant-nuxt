{
  "resolvedId": "/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/node_modules/date-fns/eachWeekOfInterval.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { addWeeks } from \"./addWeeks.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link eachWeekOfInterval} function options.\n */\n\n/**\n * @name eachWeekOfInterval\n * @category Interval Helpers\n * @summary Return the array of weeks within the specified time interval.\n *\n * @description\n * Return the array of weeks within the specified time interval.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param interval - The interval.\n * @param options - An object with options.\n *\n * @returns The array with starts of weeks from the week of the interval start to the week of the interval end\n *\n * @example\n * // Each week within interval 6 October 2014 - 23 November 2014:\n * const result = eachWeekOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 10, 23)\n * })\n * //=> [\n * //   Sun Oct 05 2014 00:00:00,\n * //   Sun Oct 12 2014 00:00:00,\n * //   Sun Oct 19 2014 00:00:00,\n * //   Sun Oct 26 2014 00:00:00,\n * //   Sun Nov 02 2014 00:00:00,\n * //   Sun Nov 09 2014 00:00:00,\n * //   Sun Nov 16 2014 00:00:00,\n * //   Sun Nov 23 2014 00:00:00\n * // ]\n */\nexport function eachWeekOfInterval(interval, options) {\n  const startDate = toDate(interval.start);\n  const endDate = toDate(interval.end);\n\n  let reversed = +startDate > +endDate;\n  const startDateWeek = reversed\n    ? startOfWeek(endDate, options)\n    : startOfWeek(startDate, options);\n  const endDateWeek = reversed\n    ? startOfWeek(startDate, options)\n    : startOfWeek(endDate, options);\n\n  // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet\n  startDateWeek.setHours(15);\n  endDateWeek.setHours(15);\n\n  const endTime = +endDateWeek.getTime();\n  let currentDate = startDateWeek;\n\n  let step = options?.step ?? 1;\n  if (!step) return [];\n  if (step < 0) {\n    step = -step;\n    reversed = !reversed;\n  }\n\n  const dates = [];\n\n  while (+currentDate <= endTime) {\n    currentDate.setHours(0);\n    dates.push(toDate(currentDate));\n    currentDate = addWeeks(currentDate, step);\n    currentDate.setHours(15);\n  }\n\n  return reversed ? dates.reverse() : dates;\n}\n\n// Fallback for modularized imports:\nexport default eachWeekOfInterval;\n",
      "start": 1717261248720,
      "end": 1717261248784,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717261248784,
      "end": 1717261248784,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717261248784,
      "end": 1717261248784,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717261248784,
      "end": 1717261248784,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717261248784,
      "end": 1717261248784,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1717261248784,
      "end": 1717261248784,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1717261248784,
      "end": 1717261248784,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717261248784,
      "end": 1717261248784,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1717261248784,
      "end": 1717261248784,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717261248784,
      "end": 1717261248784,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261248784,
      "end": 1717261248784,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717261248784,
      "end": 1717261248784,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1717261248784,
      "end": 1717261248784,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1717261248784,
      "end": 1717261248785,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261248785,
      "end": 1717261248785,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717261248785,
      "end": 1717261248785,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717261248785,
      "end": 1717261248785,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717261248785,
      "end": 1717261248785,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717261248785,
      "end": 1717261248785,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717261248785,
      "end": 1717261248785,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717261248785,
      "end": 1717261248785,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1717261248785,
      "end": 1717261248785,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717261248785,
      "end": 1717261248785,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717261248785,
      "end": 1717261248785,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717261248785,
      "end": 1717261248785,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717261248785,
      "end": 1717261248785,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717261248785,
      "end": 1717261248785,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717261248785,
      "end": 1717261248785,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1717261248785,
      "end": 1717261248785,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1717261248785,
      "end": 1717261248785,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1717261248785,
      "end": 1717261248785,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717261248785,
      "end": 1717261248785,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717261248785,
      "end": 1717261248785,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717261248785,
      "end": 1717261248785,
      "order": "normal"
    }
  ]
}
