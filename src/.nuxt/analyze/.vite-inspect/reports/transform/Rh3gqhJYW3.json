{
  "resolvedId": "/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/node_modules/date-fns/getWeekYear.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n",
      "start": 1717261248869,
      "end": 1717261248911,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717261248911,
      "end": 1717261248911,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717261248912,
      "end": 1717261248912,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717261248913,
      "end": 1717261248913,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717261248913,
      "end": 1717261248913,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717261248913,
      "end": 1717261248913,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717261248913,
      "end": 1717261248913,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1717261248913,
      "end": 1717261248913,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1717261248913,
      "end": 1717261248913,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1717261248913,
      "end": 1717261248913,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717261248913,
      "end": 1717261248913,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717261248913,
      "end": 1717261248913,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717261248913,
      "end": 1717261248913,
      "order": "normal"
    }
  ]
}
