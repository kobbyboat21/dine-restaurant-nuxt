{
  "resolvedId": "/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/node_modules/@nuxt/ui/dist/runtime/components/navigation/VerticalNavigation.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <nav :class=\"ui.wrapper\" v-bind=\"attrs\">\n    <ul v-for=\"(section, sectionIndex) of linkSections\" :key=\"`linkSection${sectionIndex}`\">\n      <li v-for=\"(link, index) of section\" :key=\"`linkSection${sectionIndex}-${index}`\">\n        <ULink\n          v-slot=\"{ isActive }\"\n          v-bind=\"omit(link, ['label', 'labelClass', 'icon', 'iconClass', 'avatar', 'badge', 'click'])\"\n          :class=\"[ui.base, ui.padding, ui.width, ui.ring, ui.rounded, ui.font, ui.size]\"\n          :active-class=\"ui.active\"\n          :inactive-class=\"ui.inactive\"\n          @click=\"link.click\"\n          @keyup.enter=\"$event.target.blur()\"\n        >\n          <slot name=\"avatar\" :link=\"link\" :is-active=\"isActive\">\n            <UAvatar\n              v-if=\"link.avatar\"\n              v-bind=\"{ size: ui.avatar.size, ...link.avatar }\"\n              :class=\"[ui.avatar.base]\"\n            />\n          </slot>\n          <slot name=\"icon\" :link=\"link\" :is-active=\"isActive\">\n            <UIcon\n              v-if=\"link.icon\"\n              :name=\"link.icon\"\n              :class=\"twMerge(twJoin(ui.icon.base, isActive ? ui.icon.active : ui.icon.inactive), link.iconClass)\"\n            />\n          </slot>\n          <slot :link=\"link\" :is-active=\"isActive\">\n            <span v-if=\"link.label\" :class=\"twMerge(ui.label, link.labelClass)\">\n              <span v-if=\"isActive\" class=\"sr-only\">\n                Current page:\n              </span>\n              {{ link.label }}\n            </span>\n          </slot>\n          <slot name=\"badge\" :link=\"link\" :is-active=\"isActive\">\n            <span v-if=\"link.badge\" :class=\"[ui.badge.base, isActive ? ui.badge.active : ui.badge.inactive]\">\n              {{ link.badge }}\n            </span>\n          </slot>\n        </ULink>\n      </li>\n      <UDivider v-if=\"sectionIndex < linkSections.length - 1\" :ui=\"ui.divider\" />\n    </ul>\n  </nav>\n</template>\n\n<script>\nimport { toRef, defineComponent, computed } from \"vue\";\nimport { twMerge, twJoin } from \"tailwind-merge\";\nimport UIcon from \"../elements/Icon.vue\";\nimport UAvatar from \"../elements/Avatar.vue\";\nimport ULink from \"../elements/Link.vue\";\nimport UDivider from \"../layout/Divider.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig, omit } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { verticalNavigation } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.verticalNavigation, verticalNavigation);\nexport default defineComponent({\n  components: {\n    UIcon,\n    UAvatar,\n    ULink,\n    UDivider\n  },\n  inheritAttrs: false,\n  props: {\n    links: {\n      type: Array,\n      default: () => []\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"verticalNavigation\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const linkSections = computed(() => {\n      return Array.isArray(props.links[0]) ? props.links : [props.links];\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      omit,\n      linkSections,\n      twMerge,\n      twJoin\n    };\n  }\n});\n</script>\n",
      "start": 1717261249240,
      "end": 1717261250373,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717261250373,
      "end": 1717261250373,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717261250373,
      "end": 1717261250373,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717261250373,
      "end": 1717261250373,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717261250373,
      "end": 1717261250373,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1717261250374,
      "end": 1717261250374,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1717261250374,
      "end": 1717261250374,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717261250374,
      "end": 1717261250374,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\nimport { toRef, defineComponent, computed } from \"vue\";\nimport { twMerge, twJoin } from \"tailwind-merge\";\nimport UIcon from \"../elements/Icon.vue\";\nimport UAvatar from \"../elements/Avatar.vue\";\nimport ULink from \"../elements/Link.vue\";\nimport UDivider from \"../layout/Divider.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig, omit } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { verticalNavigation } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.verticalNavigation, verticalNavigation);\nconst _sfc_main = defineComponent({\n  components: {\n    UIcon,\n    UAvatar,\n    ULink,\n    UDivider\n  },\n  inheritAttrs: false,\n  props: {\n    links: {\n      type: Array,\n      default: () => []\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"verticalNavigation\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const linkSections = computed(() => {\n      return Array.isArray(props.links[0]) ? props.links : [props.links];\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      omit,\n      linkSections,\n      twMerge,\n      twJoin\n    };\n  }\n});\n\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, renderSlot as _renderSlot, resolveComponent as _resolveComponent, mergeProps as _mergeProps, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withKeys as _withKeys, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"sr-only\"\n}\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_UAvatar = _resolveComponent(\"UAvatar\")\n  const _component_UIcon = _resolveComponent(\"UIcon\")\n  const _component_ULink = _resolveComponent(\"ULink\")\n  const _component_UDivider = _resolveComponent(\"UDivider\")\n\n  return (_openBlock(), _createElementBlock(\"nav\", _mergeProps({\n    class: _ctx.ui.wrapper\n  }, _ctx.attrs), [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.linkSections, (section, sectionIndex) => {\n      return (_openBlock(), _createElementBlock(\"ul\", {\n        key: `linkSection${sectionIndex}`\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(section, (link, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: `linkSection${sectionIndex}-${index}`\n          }, [\n            _createVNode(_component_ULink, _mergeProps(_ctx.omit(link, ['label', 'labelClass', 'icon', 'iconClass', 'avatar', 'badge', 'click']), {\n              class: [_ctx.ui.base, _ctx.ui.padding, _ctx.ui.width, _ctx.ui.ring, _ctx.ui.rounded, _ctx.ui.font, _ctx.ui.size],\n              \"active-class\": _ctx.ui.active,\n              \"inactive-class\": _ctx.ui.inactive,\n              onClick: link.click,\n              onKeyup: _cache[0] || (_cache[0] = _withKeys($event => ($event.target.blur()), [\"enter\"]))\n            }), {\n              default: _withCtx(({ isActive }) => [\n                _renderSlot(_ctx.$slots, \"avatar\", {\n                  link: link,\n                  isActive: isActive\n                }, () => [\n                  (link.avatar)\n                    ? (_openBlock(), _createBlock(_component_UAvatar, _mergeProps({ key: 0 }, { size: _ctx.ui.avatar.size, ...link.avatar }, {\n                        class: [_ctx.ui.avatar.base]\n                      }), null, 16, [\"class\"]))\n                    : _createCommentVNode(\"\", true)\n                ]),\n                _renderSlot(_ctx.$slots, \"icon\", {\n                  link: link,\n                  isActive: isActive\n                }, () => [\n                  (link.icon)\n                    ? (_openBlock(), _createBlock(_component_UIcon, {\n                        key: 0,\n                        name: link.icon,\n                        class: _normalizeClass(_ctx.twMerge(_ctx.twJoin(_ctx.ui.icon.base, isActive ? _ctx.ui.icon.active : _ctx.ui.icon.inactive), link.iconClass))\n                      }, null, 8, [\"name\", \"class\"]))\n                    : _createCommentVNode(\"\", true)\n                ]),\n                _renderSlot(_ctx.$slots, \"default\", {\n                  link: link,\n                  isActive: isActive\n                }, () => [\n                  (link.label)\n                    ? (_openBlock(), _createElementBlock(\"span\", {\n                        key: 0,\n                        class: _normalizeClass(_ctx.twMerge(_ctx.ui.label, link.labelClass))\n                      }, [\n                        isActive\n                          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, \" Current page: \"))\n                          : _createCommentVNode(\"\", true),\n                        _createTextVNode(\" \" + _toDisplayString(link.label), 1)\n                      ], 2))\n                    : _createCommentVNode(\"\", true)\n                ]),\n                _renderSlot(_ctx.$slots, \"badge\", {\n                  link: link,\n                  isActive: isActive\n                }, () => [\n                  (link.badge)\n                    ? (_openBlock(), _createElementBlock(\"span\", {\n                        key: 0,\n                        class: _normalizeClass([_ctx.ui.badge.base, isActive ? _ctx.ui.badge.active : _ctx.ui.badge.inactive])\n                      }, _toDisplayString(link.badge), 3))\n                    : _createCommentVNode(\"\", true)\n                ])\n              ]),\n              _: 2\n            }, 1040, [\"class\", \"active-class\", \"inactive-class\", \"onClick\"])\n          ]))\n        }), 128)),\n        (sectionIndex < _ctx.linkSections.length - 1)\n          ? (_openBlock(), _createBlock(_component_UDivider, {\n              key: 0,\n              ui: _ctx.ui.divider\n            }, null, 8, [\"ui\"]))\n          : _createCommentVNode(\"\", true)\n      ]))\n    }), 128))\n  ], 16))\n}\n\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])",
      "start": 1717261250374,
      "end": 1717261250382,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717261250382,
      "end": 1717261250382,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261250382,
      "end": 1717261250382,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717261250382,
      "end": 1717261250382,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1717261250382,
      "end": 1717261250382,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1717261250382,
      "end": 1717261250382,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261250382,
      "end": 1717261250382,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717261250382,
      "end": 1717261250382,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717261250382,
      "end": 1717261250383,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717261250383,
      "end": 1717261250383,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717261250383,
      "end": 1717261250383,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717261250383,
      "end": 1717261250383,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717261250383,
      "end": 1717261250383,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1717261250383,
      "end": 1717261250383,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717261250383,
      "end": 1717261250383,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717261250383,
      "end": 1717261250383,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717261250383,
      "end": 1717261250383,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717261250383,
      "end": 1717261250383,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717261250383,
      "end": 1717261250383,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717261250383,
      "end": 1717261250383,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1717261250383,
      "end": 1717261250383,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1717261250383,
      "end": 1717261250383,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/node_modules/@nuxt/ui/dist/runtime/components/elements/Avatar.vue\";\nimport { default as __nuxt_component_1 } from \"/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/node_modules/@nuxt/ui/dist/runtime/components/elements/Icon.vue\";\nimport { default as __nuxt_component_2 } from \"/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/node_modules/@nuxt/ui/dist/runtime/components/elements/Link.vue\";\nimport { default as __nuxt_component_3 } from \"/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/node_modules/@nuxt/ui/dist/runtime/components/layout/Divider.vue\";\n\nimport { toRef, defineComponent, computed } from \"vue\";\nimport { twMerge, twJoin } from \"tailwind-merge\";\nimport UIcon from \"../elements/Icon.vue\";\nimport UAvatar from \"../elements/Avatar.vue\";\nimport ULink from \"../elements/Link.vue\";\nimport UDivider from \"../layout/Divider.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig, omit } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { verticalNavigation } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.verticalNavigation, verticalNavigation);\nconst _sfc_main = defineComponent({\n  components: {\n    UIcon,\n    UAvatar,\n    ULink,\n    UDivider\n  },\n  inheritAttrs: false,\n  props: {\n    links: {\n      type: Array,\n      default: () => []\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"verticalNavigation\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const linkSections = computed(() => {\n      return Array.isArray(props.links[0]) ? props.links : [props.links];\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      omit,\n      linkSections,\n      twMerge,\n      twJoin\n    };\n  }\n});\n\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, renderSlot as _renderSlot, resolveComponent as _resolveComponent, mergeProps as _mergeProps, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withKeys as _withKeys, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"sr-only\"\n}\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_UAvatar = __nuxt_component_0\n  const _component_UIcon = __nuxt_component_1\n  const _component_ULink = __nuxt_component_2\n  const _component_UDivider = __nuxt_component_3\n\n  return (_openBlock(), _createElementBlock(\"nav\", _mergeProps({\n    class: _ctx.ui.wrapper\n  }, _ctx.attrs), [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.linkSections, (section, sectionIndex) => {\n      return (_openBlock(), _createElementBlock(\"ul\", {\n        key: `linkSection${sectionIndex}`\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(section, (link, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: `linkSection${sectionIndex}-${index}`\n          }, [\n            _createVNode(_component_ULink, _mergeProps(_ctx.omit(link, ['label', 'labelClass', 'icon', 'iconClass', 'avatar', 'badge', 'click']), {\n              class: [_ctx.ui.base, _ctx.ui.padding, _ctx.ui.width, _ctx.ui.ring, _ctx.ui.rounded, _ctx.ui.font, _ctx.ui.size],\n              \"active-class\": _ctx.ui.active,\n              \"inactive-class\": _ctx.ui.inactive,\n              onClick: link.click,\n              onKeyup: _cache[0] || (_cache[0] = _withKeys($event => ($event.target.blur()), [\"enter\"]))\n            }), {\n              default: _withCtx(({ isActive }) => [\n                _renderSlot(_ctx.$slots, \"avatar\", {\n                  link: link,\n                  isActive: isActive\n                }, () => [\n                  (link.avatar)\n                    ? (_openBlock(), _createBlock(_component_UAvatar, _mergeProps({ key: 0 }, { size: _ctx.ui.avatar.size, ...link.avatar }, {\n                        class: [_ctx.ui.avatar.base]\n                      }), null, 16, [\"class\"]))\n                    : _createCommentVNode(\"\", true)\n                ]),\n                _renderSlot(_ctx.$slots, \"icon\", {\n                  link: link,\n                  isActive: isActive\n                }, () => [\n                  (link.icon)\n                    ? (_openBlock(), _createBlock(_component_UIcon, {\n                        key: 0,\n                        name: link.icon,\n                        class: _normalizeClass(_ctx.twMerge(_ctx.twJoin(_ctx.ui.icon.base, isActive ? _ctx.ui.icon.active : _ctx.ui.icon.inactive), link.iconClass))\n                      }, null, 8, [\"name\", \"class\"]))\n                    : _createCommentVNode(\"\", true)\n                ]),\n                _renderSlot(_ctx.$slots, \"default\", {\n                  link: link,\n                  isActive: isActive\n                }, () => [\n                  (link.label)\n                    ? (_openBlock(), _createElementBlock(\"span\", {\n                        key: 0,\n                        class: _normalizeClass(_ctx.twMerge(_ctx.ui.label, link.labelClass))\n                      }, [\n                        isActive\n                          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, \" Current page: \"))\n                          : _createCommentVNode(\"\", true),\n                        _createTextVNode(\" \" + _toDisplayString(link.label), 1)\n                      ], 2))\n                    : _createCommentVNode(\"\", true)\n                ]),\n                _renderSlot(_ctx.$slots, \"badge\", {\n                  link: link,\n                  isActive: isActive\n                }, () => [\n                  (link.badge)\n                    ? (_openBlock(), _createElementBlock(\"span\", {\n                        key: 0,\n                        class: _normalizeClass([_ctx.ui.badge.base, isActive ? _ctx.ui.badge.active : _ctx.ui.badge.inactive])\n                      }, _toDisplayString(link.badge), 3))\n                    : _createCommentVNode(\"\", true)\n                ])\n              ]),\n              _: 2\n            }, 1040, [\"class\", \"active-class\", \"inactive-class\", \"onClick\"])\n          ]))\n        }), 128)),\n        (sectionIndex < _ctx.linkSections.length - 1)\n          ? (_openBlock(), _createBlock(_component_UDivider, {\n              key: 0,\n              ui: _ctx.ui.divider\n            }, null, 8, [\"ui\"]))\n          : _createCommentVNode(\"\", true)\n      ]))\n    }), 128))\n  ], 16))\n}\n\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])",
      "start": 1717261250383,
      "end": 1717261250383,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717261250383,
      "end": 1717261250383,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717261250383,
      "end": 1717261250383,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717261250383,
      "end": 1717261250383,
      "order": "normal"
    }
  ]
}
