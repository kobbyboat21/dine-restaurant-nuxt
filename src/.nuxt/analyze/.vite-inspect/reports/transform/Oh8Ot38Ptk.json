{
  "resolvedId": "/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/node_modules/@nuxt/ui/dist/runtime/components/navigation/Tabs.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <HTabGroup\n    :vertical=\"orientation === 'vertical'\"\n    :selected-index=\"selectedIndex\"\n    as=\"div\"\n    :class=\"ui.wrapper\"\n    v-bind=\"attrs\"\n    @change=\"onChange\"\n  >\n    <HTabList\n      ref=\"listRef\"\n      :class=\"[ui.list.base, ui.list.background, ui.list.rounded, ui.list.shadow, ui.list.padding, ui.list.width, orientation === 'horizontal' && ui.list.height, orientation === 'horizontal' && 'inline-grid items-center']\"\n      :style=\"[orientation === 'horizontal' && `grid-template-columns: repeat(${items.length}, minmax(0, 1fr))`]\"\n    >\n      <div ref=\"markerRef\" :class=\"ui.list.marker.wrapper\">\n        <div :class=\"[ui.list.marker.base, ui.list.marker.background, ui.list.marker.rounded, ui.list.marker.shadow]\" />\n      </div>\n\n      <HTab\n        v-for=\"(item, index) of items\"\n        :key=\"index\"\n        ref=\"itemRefs\"\n        v-slot=\"{ selected, disabled }\"\n        :disabled=\"item.disabled\"\n        as=\"template\"\n      >\n        <button :class=\"[ui.list.tab.base, ui.list.tab.background, ui.list.tab.height, ui.list.tab.padding, ui.list.tab.size, ui.list.tab.font, ui.list.tab.rounded, ui.list.tab.shadow, selected ? ui.list.tab.active : ui.list.tab.inactive]\">\n          <slot :item=\"item\" :index=\"index\" :selected=\"selected\" :disabled=\"disabled\">\n            <span class=\"truncate\">{{ item.label }}</span>\n          </slot>\n        </button>\n      </HTab>\n    </HTabList>\n\n    <HTabPanels :class=\"ui.container\">\n      <HTabPanel\n        v-for=\"(item, index) of items\"\n        :key=\"index\"\n        v-slot=\"{ selected }\"\n        :class=\"ui.base\"\n        tabindex=\"-1\"\n      >\n        <slot :name=\"item.slot || 'item'\" :item=\"item\" :index=\"index\" :selected=\"selected\">\n          {{ item.content }}\n        </slot>\n      </HTabPanel>\n    </HTabPanels>\n  </HTabGroup>\n</template>\n\n<script>\nimport { toRef, ref, watch, onMounted, defineComponent } from \"vue\";\nimport { TabGroup as HTabGroup, TabList as HTabList, Tab as HTab, TabPanels as HTabPanels, TabPanel as HTabPanel } from \"@headlessui/vue\";\nimport { useResizeObserver } from \"@vueuse/core\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { tabs } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.tabs, tabs);\nexport default defineComponent({\n  components: {\n    HTabGroup,\n    HTabList,\n    HTab,\n    HTabPanels,\n    HTabPanel\n  },\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: Number,\n      default: void 0\n    },\n    orientation: {\n      type: String,\n      default: \"horizontal\",\n      validator: (value) => [\"horizontal\", \"vertical\"].includes(value)\n    },\n    defaultIndex: {\n      type: Number,\n      default: 0\n    },\n    items: {\n      type: Array,\n      default: () => []\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\", \"change\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"tabs\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const listRef = ref();\n    const itemRefs = ref([]);\n    const markerRef = ref();\n    const selectedIndex = ref(props.modelValue || props.defaultIndex);\n    function calcMarkerSize(index) {\n      const tab = itemRefs.value[index]?.$el;\n      if (!tab) {\n        return;\n      }\n      if (!markerRef.value) {\n        return;\n      }\n      markerRef.value.style.top = `${tab.offsetTop}px`;\n      markerRef.value.style.left = `${tab.offsetLeft}px`;\n      markerRef.value.style.width = `${tab.offsetWidth}px`;\n      markerRef.value.style.height = `${tab.offsetHeight}px`;\n    }\n    function onChange(index) {\n      selectedIndex.value = index;\n      emit(\"change\", index);\n      if (props.modelValue !== void 0) {\n        emit(\"update:modelValue\", selectedIndex.value);\n      }\n      calcMarkerSize(selectedIndex.value);\n    }\n    useResizeObserver(listRef, () => {\n      calcMarkerSize(selectedIndex.value);\n    });\n    watch(() => props.modelValue, (value) => {\n      selectedIndex.value = value;\n      calcMarkerSize(selectedIndex.value);\n    });\n    onMounted(() => calcMarkerSize(selectedIndex.value));\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      listRef,\n      itemRefs,\n      markerRef,\n      selectedIndex,\n      onChange\n    };\n  }\n});\n</script>\n",
      "start": 1717261249531,
      "end": 1717261250547,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717261250547,
      "end": 1717261250547,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717261250547,
      "end": 1717261250547,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717261250547,
      "end": 1717261250547,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717261250547,
      "end": 1717261250547,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1717261250547,
      "end": 1717261250547,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1717261250547,
      "end": 1717261250547,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717261250547,
      "end": 1717261250547,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\nimport { toRef, ref, watch, onMounted, defineComponent } from \"vue\";\nimport { TabGroup as HTabGroup, TabList as HTabList, Tab as HTab, TabPanels as HTabPanels, TabPanel as HTabPanel } from \"@headlessui/vue\";\nimport { useResizeObserver } from \"@vueuse/core\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { tabs } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.tabs, tabs);\nconst _sfc_main = defineComponent({\n  components: {\n    HTabGroup,\n    HTabList,\n    HTab,\n    HTabPanels,\n    HTabPanel\n  },\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: Number,\n      default: void 0\n    },\n    orientation: {\n      type: String,\n      default: \"horizontal\",\n      validator: (value) => [\"horizontal\", \"vertical\"].includes(value)\n    },\n    defaultIndex: {\n      type: Number,\n      default: 0\n    },\n    items: {\n      type: Array,\n      default: () => []\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\", \"change\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"tabs\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const listRef = ref();\n    const itemRefs = ref([]);\n    const markerRef = ref();\n    const selectedIndex = ref(props.modelValue || props.defaultIndex);\n    function calcMarkerSize(index) {\n      const tab = itemRefs.value[index]?.$el;\n      if (!tab) {\n        return;\n      }\n      if (!markerRef.value) {\n        return;\n      }\n      markerRef.value.style.top = `${tab.offsetTop}px`;\n      markerRef.value.style.left = `${tab.offsetLeft}px`;\n      markerRef.value.style.width = `${tab.offsetWidth}px`;\n      markerRef.value.style.height = `${tab.offsetHeight}px`;\n    }\n    function onChange(index) {\n      selectedIndex.value = index;\n      emit(\"change\", index);\n      if (props.modelValue !== void 0) {\n        emit(\"update:modelValue\", selectedIndex.value);\n      }\n      calcMarkerSize(selectedIndex.value);\n    }\n    useResizeObserver(listRef, () => {\n      calcMarkerSize(selectedIndex.value);\n    });\n    watch(() => props.modelValue, (value) => {\n      selectedIndex.value = value;\n      calcMarkerSize(selectedIndex.value);\n    });\n    onMounted(() => calcMarkerSize(selectedIndex.value));\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      listRef,\n      itemRefs,\n      markerRef,\n      selectedIndex,\n      onChange\n    };\n  }\n});\n\nimport { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, renderSlot as _renderSlot, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, normalizeStyle as _normalizeStyle, createVNode as _createVNode, createTextVNode as _createTextVNode, mergeProps as _mergeProps } from \"vue\"\n\nconst _hoisted_1 = { class: \"truncate\" }\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HTab = _resolveComponent(\"HTab\")\n  const _component_HTabList = _resolveComponent(\"HTabList\")\n  const _component_HTabPanel = _resolveComponent(\"HTabPanel\")\n  const _component_HTabPanels = _resolveComponent(\"HTabPanels\")\n  const _component_HTabGroup = _resolveComponent(\"HTabGroup\")\n\n  return (_openBlock(), _createBlock(_component_HTabGroup, _mergeProps({\n    vertical: _ctx.orientation === 'vertical',\n    \"selected-index\": _ctx.selectedIndex,\n    as: \"div\",\n    class: _ctx.ui.wrapper\n  }, _ctx.attrs, { onChange: _ctx.onChange }), {\n    default: _withCtx(() => [\n      _createVNode(_component_HTabList, {\n        ref: \"listRef\",\n        class: _normalizeClass([_ctx.ui.list.base, _ctx.ui.list.background, _ctx.ui.list.rounded, _ctx.ui.list.shadow, _ctx.ui.list.padding, _ctx.ui.list.width, _ctx.orientation === 'horizontal' && _ctx.ui.list.height, _ctx.orientation === 'horizontal' && 'inline-grid items-center']),\n        style: _normalizeStyle([_ctx.orientation === 'horizontal' && `grid-template-columns: repeat(${_ctx.items.length}, minmax(0, 1fr))`])\n      }, {\n        default: _withCtx(() => [\n          _createElementVNode(\"div\", {\n            ref: \"markerRef\",\n            class: _normalizeClass(_ctx.ui.list.marker.wrapper)\n          }, [\n            _createElementVNode(\"div\", {\n              class: _normalizeClass([_ctx.ui.list.marker.base, _ctx.ui.list.marker.background, _ctx.ui.list.marker.rounded, _ctx.ui.list.marker.shadow])\n            }, null, 2)\n          ], 2),\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.items, (item, index) => {\n            return (_openBlock(), _createBlock(_component_HTab, {\n              key: index,\n              ref_for: true,\n              ref: \"itemRefs\",\n              disabled: item.disabled,\n              as: \"template\"\n            }, {\n              default: _withCtx(({ selected, disabled }) => [\n                _createElementVNode(\"button\", {\n                  class: _normalizeClass([_ctx.ui.list.tab.base, _ctx.ui.list.tab.background, _ctx.ui.list.tab.height, _ctx.ui.list.tab.padding, _ctx.ui.list.tab.size, _ctx.ui.list.tab.font, _ctx.ui.list.tab.rounded, _ctx.ui.list.tab.shadow, selected ? _ctx.ui.list.tab.active : _ctx.ui.list.tab.inactive])\n                }, [\n                  _renderSlot(_ctx.$slots, \"default\", {\n                    item: item,\n                    index: index,\n                    selected: selected,\n                    disabled: disabled\n                  }, () => [\n                    _createElementVNode(\"span\", _hoisted_1, _toDisplayString(item.label), 1)\n                  ])\n                ], 2)\n              ]),\n              _: 2\n            }, 1032, [\"disabled\"]))\n          }), 128))\n        ]),\n        _: 3\n      }, 8, [\"class\", \"style\"]),\n      _createVNode(_component_HTabPanels, {\n        class: _normalizeClass(_ctx.ui.container)\n      }, {\n        default: _withCtx(() => [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.items, (item, index) => {\n            return (_openBlock(), _createBlock(_component_HTabPanel, {\n              key: index,\n              class: _normalizeClass(_ctx.ui.base),\n              tabindex: \"-1\"\n            }, {\n              default: _withCtx(({ selected }) => [\n                _renderSlot(_ctx.$slots, item.slot || 'item', {\n                  item: item,\n                  index: index,\n                  selected: selected\n                }, () => [\n                  _createTextVNode(_toDisplayString(item.content), 1)\n                ])\n              ]),\n              _: 2\n            }, 1032, [\"class\"]))\n          }), 128))\n        ]),\n        _: 3\n      }, 8, [\"class\"])\n    ]),\n    _: 3\n  }, 16, [\"vertical\", \"selected-index\", \"class\", \"onChange\"]))\n}\n\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])",
      "start": 1717261250547,
      "end": 1717261250556,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717261250556,
      "end": 1717261250556,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261250556,
      "end": 1717261250556,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717261250556,
      "end": 1717261250556,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1717261250556,
      "end": 1717261250556,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1717261250556,
      "end": 1717261250556,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261250556,
      "end": 1717261250556,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717261250556,
      "end": 1717261250556,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717261250556,
      "end": 1717261250557,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717261250557,
      "end": 1717261250557,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717261250557,
      "end": 1717261250557,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717261250557,
      "end": 1717261250557,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717261250557,
      "end": 1717261250557,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1717261250557,
      "end": 1717261250557,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717261250557,
      "end": 1717261250557,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717261250557,
      "end": 1717261250557,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717261250557,
      "end": 1717261250557,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717261250557,
      "end": 1717261250557,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717261250557,
      "end": 1717261250557,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717261250557,
      "end": 1717261250557,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1717261250557,
      "end": 1717261250557,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1717261250557,
      "end": 1717261250557,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1717261250557,
      "end": 1717261250557,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717261250557,
      "end": 1717261250558,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717261250558,
      "end": 1717261250558,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717261250558,
      "end": 1717261250558,
      "order": "normal"
    }
  ]
}
