{
  "resolvedId": "/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/node_modules/date-fns/_lib/format/lightFormatters.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n",
      "start": 1717261250491,
      "end": 1717261250623,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717261250623,
      "end": 1717261250623,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717261250623,
      "end": 1717261250623,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717261250623,
      "end": 1717261250623,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717261250623,
      "end": 1717261250623,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1717261250623,
      "end": 1717261250623,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1717261250623,
      "end": 1717261250623,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717261250623,
      "end": 1717261250623,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1717261250623,
      "end": 1717261250623,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717261250623,
      "end": 1717261250623,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261250623,
      "end": 1717261250623,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717261250623,
      "end": 1717261250623,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1717261250623,
      "end": 1717261250623,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1717261250623,
      "end": 1717261250624,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261250624,
      "end": 1717261250624,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717261250624,
      "end": 1717261250624,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717261250624,
      "end": 1717261250624,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717261250624,
      "end": 1717261250624,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717261250624,
      "end": 1717261250624,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717261250624,
      "end": 1717261250624,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717261250624,
      "end": 1717261250624,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1717261250624,
      "end": 1717261250624,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717261250624,
      "end": 1717261250624,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717261250624,
      "end": 1717261250624,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717261250624,
      "end": 1717261250624,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717261250624,
      "end": 1717261250624,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717261250624,
      "end": 1717261250624,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717261250624,
      "end": 1717261250624,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1717261250624,
      "end": 1717261250624,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1717261250624,
      "end": 1717261250624,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1717261250624,
      "end": 1717261250624,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717261250624,
      "end": 1717261250624,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717261250624,
      "end": 1717261250624,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717261250624,
      "end": 1717261250624,
      "order": "normal"
    }
  ]
}
