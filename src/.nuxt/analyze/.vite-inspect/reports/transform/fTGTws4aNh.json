{
  "resolvedId": "/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/node_modules/nuxt-viewport/dist/runtime/manager.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { computed } from \"vue-demi\";\nconst COOKIE_EXPIRES_IN_DAYS = 365 * 24 * 60 * 60 * 1e3;\nexport const DEFAULT_OPTIONS = {\n  breakpoints: {\n    desktop: 1024,\n    desktopMedium: 1280,\n    desktopWide: 1600,\n    mobile: 320,\n    mobileMedium: 375,\n    mobileWide: 425,\n    tablet: 768\n  },\n  cookieName: \"viewport\",\n  defaultBreakpoints: {\n    desktop: \"desktop\",\n    mobile: \"mobile\",\n    tablet: \"tablet\"\n  },\n  fallbackBreakpoint: \"desktop\"\n};\nexport const STATE_KEY = \"viewportState\";\nexport function createViewportManager(options, state) {\n  const breakpoint = computed({\n    get() {\n      return state.value || options.fallbackBreakpoint;\n    },\n    set(newBreakpoint) {\n      state.value = newBreakpoint;\n      if (options.cookieName && typeof window !== \"undefined\") {\n        const date = /* @__PURE__ */ new Date();\n        date.setTime(date.getTime() + COOKIE_EXPIRES_IN_DAYS);\n        document.cookie = `${options.cookieName}=${state.value}; SameSite=Strict; Secure; Expires=${date.toUTCString()}; Path=/`;\n      }\n    }\n  });\n  const queries = computed(() => {\n    const breakpoints = options.breakpoints || {};\n    const breakpointsKeys = Object.keys(breakpoints).sort((a, b) => breakpoints[a] - breakpoints[b]);\n    const output = {};\n    let i = breakpointsKeys.length;\n    while (i--) {\n      const currentKey = breakpointsKeys[i];\n      const size = breakpoints[currentKey];\n      const nextSize = breakpoints[breakpointsKeys[i + 1]];\n      let mediaQuery = \"\";\n      if (i > 0) {\n        mediaQuery = `(min-width: ${size}px)`;\n      } else {\n        mediaQuery = \"(min-width: 1px)\";\n      }\n      if (nextSize) {\n        mediaQuery += ` and (max-width: ${nextSize - 1}px)`;\n      }\n      output[currentKey] = {\n        mediaQuery,\n        size\n      };\n    }\n    return output;\n  });\n  const queriesKeys = computed(() => Object.keys(queries.value));\n  return {\n    breakpoint,\n    breakpointValue,\n    isGreaterThan,\n    isGreaterOrEquals,\n    isLessThan,\n    match,\n    matches,\n    queries\n  };\n  function breakpointValue(searchBreakpoint) {\n    const breakpoints = options.breakpoints || {};\n    return breakpoints[searchBreakpoint];\n  }\n  function isGreaterThan(searchBreakpoint) {\n    const currentIndex = queriesKeys.value.indexOf(breakpoint.value);\n    const breakpointIndex = queriesKeys.value.indexOf(searchBreakpoint);\n    if (breakpointIndex === -1) {\n      return false;\n    }\n    return breakpointIndex > currentIndex;\n  }\n  function isGreaterOrEquals(searchBreakpoint) {\n    return isGreaterThan(searchBreakpoint) || match(searchBreakpoint);\n  }\n  function isLessThan(searchBreakpoint) {\n    const currentIndex = queriesKeys.value.indexOf(breakpoint.value);\n    const breakpointIndex = queriesKeys.value.indexOf(searchBreakpoint);\n    if (breakpointIndex === -1) {\n      return false;\n    }\n    return breakpointIndex < currentIndex;\n  }\n  function match(breakpointToMatch) {\n    return breakpoint.value === breakpointToMatch;\n  }\n  function matches(...breakpointsToMatch) {\n    return breakpointsToMatch.includes(breakpoint.value);\n  }\n}\n",
      "start": 1717261236077,
      "end": 1717261240278,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717261240278,
      "end": 1717261240278,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717261240278,
      "end": 1717261240278,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717261240278,
      "end": 1717261240278,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717261240278,
      "end": 1717261240278,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1717261240278,
      "end": 1717261240278,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1717261240278,
      "end": 1717261240278,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717261240278,
      "end": 1717261240278,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1717261240278,
      "end": 1717261240278,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717261240278,
      "end": 1717261240278,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261240278,
      "end": 1717261240278,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717261240278,
      "end": 1717261240278,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1717261240278,
      "end": 1717261240278,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717261240279,
      "end": 1717261240279,
      "order": "normal"
    }
  ]
}
