{
  "resolvedId": "/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/node_modules/date-fns/setMonth.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { constructFrom } from \"./constructFrom.mjs\";\nimport { getDaysInMonth } from \"./getDaysInMonth.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param month - The month of the new date\n *\n * @returns The new date with the month set\n *\n * @example\n * // Set February to 1 September 2014:\n * const result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\nexport function setMonth(date, month) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n  const day = _date.getDate();\n\n  const dateWithDesiredMonth = constructFrom(date, 0);\n  dateWithDesiredMonth.setFullYear(year, month, 15);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  const daysInMonth = getDaysInMonth(dateWithDesiredMonth);\n  // Set the last day of the new month\n  // if the original date was the last day of the longer month\n  _date.setMonth(month, Math.min(day, daysInMonth));\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setMonth;\n",
      "start": 1717261249113,
      "end": 1717261249156,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717261249156,
      "end": 1717261249156,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717261249156,
      "end": 1717261249156,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717261249157,
      "end": 1717261249157,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717261249157,
      "end": 1717261249158,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1717261249158,
      "end": 1717261249158,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1717261249158,
      "end": 1717261249158,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1717261249158,
      "end": 1717261249158,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717261249158,
      "end": 1717261249158,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717261249158,
      "end": 1717261249158,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717261249158,
      "end": 1717261249158,
      "order": "normal"
    }
  ]
}
