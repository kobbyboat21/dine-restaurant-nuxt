{
  "resolvedId": "/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/node_modules/date-fns/constructFrom.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n",
      "start": 1717261248575,
      "end": 1717261248704,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717261248704,
      "end": 1717261248704,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717261248704,
      "end": 1717261248704,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717261248704,
      "end": 1717261248704,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717261248704,
      "end": 1717261248704,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1717261248704,
      "end": 1717261248704,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1717261248704,
      "end": 1717261248704,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717261248704,
      "end": 1717261248704,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1717261248704,
      "end": 1717261248704,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717261248704,
      "end": 1717261248704,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261248704,
      "end": 1717261248704,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717261248704,
      "end": 1717261248704,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1717261248704,
      "end": 1717261248704,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1717261248704,
      "end": 1717261248704,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261248705,
      "end": 1717261248705,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717261248705,
      "end": 1717261248705,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717261248705,
      "end": 1717261248705,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717261248705,
      "end": 1717261248705,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717261248705,
      "end": 1717261248705,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717261248705,
      "end": 1717261248705,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717261248705,
      "end": 1717261248705,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1717261248705,
      "end": 1717261248705,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717261248705,
      "end": 1717261248705,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717261248705,
      "end": 1717261248705,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717261248705,
      "end": 1717261248705,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717261248705,
      "end": 1717261248705,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717261248705,
      "end": 1717261248705,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717261248705,
      "end": 1717261248705,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1717261248705,
      "end": 1717261248705,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1717261248705,
      "end": 1717261248705,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1717261248705,
      "end": 1717261248705,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717261248705,
      "end": 1717261248705,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717261248705,
      "end": 1717261248705,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717261248705,
      "end": 1717261248705,
      "order": "normal"
    }
  ]
}
