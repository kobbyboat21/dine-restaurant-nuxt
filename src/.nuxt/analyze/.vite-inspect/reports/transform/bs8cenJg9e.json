{
  "resolvedId": "/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/node_modules/date-fns/roundToNearestMinutes.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { getRoundingMethod } from \"./_lib/getRoundingMethod.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link roundToNearestMinutes} function options.\n */\n\n/**\n * @name roundToNearestMinutes\n * @category Minute Helpers\n * @summary Rounds the given date to the nearest minute\n *\n * @description\n * Rounds the given date to the nearest minute (or number of minutes).\n * Rounds up when the given date is exactly between the nearest round minutes.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to round\n * @param options - An object with options.\n *\n * @returns The new date rounded to the closest minute\n *\n * @example\n * // Round 10 July 2014 12:12:34 to nearest minute:\n * const result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34))\n * //=> Thu Jul 10 2014 12:13:00\n *\n * @example\n * // Round 10 July 2014 12:12:34 to nearest quarter hour:\n * const result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { nearestTo: 15 })\n * //=> Thu Jul 10 2014 12:15:00\n *\n * @example\n * // Floor (rounds down) 10 July 2014 12:12:34 to nearest minute:\n * const result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { roundingMethod: 'floor' })\n * //=> Thu Jul 10 2014 12:12:00\n *\n * @example\n * // Ceil (rounds up) 10 July 2014 12:12:34 to nearest half hour:\n * const result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { roundingMethod: 'ceil', nearestTo: 30 })\n * //=> Thu Jul 10 2014 12:30:00\n */\nexport function roundToNearestMinutes(date, options) {\n  const nearestTo = options?.nearestTo ?? 1;\n\n  if (nearestTo < 1 || nearestTo > 30) return constructFrom(date, NaN);\n\n  const _date = toDate(date);\n  const fractionalSeconds = _date.getSeconds() / 60;\n  const fractionalMilliseconds = _date.getMilliseconds() / 1000 / 60;\n  const minutes =\n    _date.getMinutes() + fractionalSeconds + fractionalMilliseconds;\n\n  // Unlike the `differenceIn*` functions, the default rounding behavior is `round` and not 'trunc'\n  const method = options?.roundingMethod ?? \"round\";\n  const roundingMethod = getRoundingMethod(method);\n\n  const roundedMinutes = roundingMethod(minutes / nearestTo) * nearestTo;\n\n  const result = constructFrom(date, _date);\n  result.setMinutes(roundedMinutes, 0, 0);\n  return result;\n}\n\n// Fallback for modularized imports:\nexport default roundToNearestMinutes;\n",
      "start": 1717261249073,
      "end": 1717261249120,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717261249120,
      "end": 1717261249120,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717261249120,
      "end": 1717261249120,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717261249120,
      "end": 1717261249120,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717261249120,
      "end": 1717261249120,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1717261249120,
      "end": 1717261249120,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1717261249120,
      "end": 1717261249120,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717261249120,
      "end": 1717261249121,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717261249121,
      "end": 1717261249121,
      "order": "normal"
    }
  ]
}
