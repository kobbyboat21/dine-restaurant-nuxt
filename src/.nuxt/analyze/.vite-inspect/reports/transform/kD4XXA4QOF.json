{
  "resolvedId": "/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/stores/dinner_menu.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineStore } from \"pinia\";\n\nexport const useDinnerStore = defineStore('dinnerStore', {\n  state: () => ({\n\t\t// List of all meals\n\t\tdinner_meals: [] \n\t}),\n  actions: {\n \n  async getDinner() {\n    let data = await $fetch(\"/api/menus/dinner\") // meals gotten from the database\n      //\n  // 2 -- Use Javascript For - In Loop on data array to set dinner_meals to contain data's contents\n    this.dinner_meals = data\n    return data\n  },\n\n  async createDinnerMeal(meal) {\n    // Get Auto-increment ID\n    let id = this.dinner_meals.length + 1\n    // Assign ID to meal\n    meal.id = id\n    // POST Request\n    await $fetch( \"/api/menus/dinner/create\" ,  {\n        // $fetch sends request to api which sends it to database to add the new dinner meal\n      method: \"POST\", //\"POST\" is an http method used to send data, in this case, to the API\n      body: meal\n    }\n    )\n    this.dinner_meals.push(meal)\n    console.log(\"Creating dinner meal for the following meal:\")\n    console.log(meal)\n  },\n\n  async editDinner(meal) {\n    let found = this.dinner_meals.find(p => p.id === meal.id)\n    if (found) {\n      console.log('edit' + found.name)\n      found.name = meal.name\n      found.price = meal.price\n      found.description = meal.description\n      found.ingredients = meal.ingredients\n      found.section = meal.section\n      let id = found._id\n\n      let edit_endpoint = `/api/menus/dinner/${id}`\n\n      await $fetch(edit_endpoint, {\n          method: \"PUT\", // \"PUT\" as well is an http method that sends data to be replaced/ updated\n          body: found\n\n        }\n        )\n    }\n\n      \n  },\n\n  async deleteDinner(meal) {\n    let foundIndex = this.dinner_meals.findIndex(p => p.id === meal.id)\n    let found = this.dinner_meals.find(p => p.id === meal.id)\n    console.log('delete' + meal.name)\n    if (foundIndex !== -1) this.dinner_meals.splice(foundIndex, 1)\n\n    let id = found._id\n\n    let delete_endpoint = `/api/menus/dinner/${id}`\n      \n    await $fetch(delete_endpoint, {\n      method: \"DELETE\",\n      })\n\n  },\n\n}\n}\n) /* \n\n  \n\n  /* const dinner_meals = ref([{\n    id: 1,\n    name: 'Filet Mignon with Red Wine Reduction',\n    price: '$31',\n    description: 'Grilled filet mignon cooked to perfection, served with a rich red wine reduction sauce. Accompanied by garlic mashed potatoes and sautéed asparagus.',\n    image: 'https://www.gritsandpinecones.com/wp-content/uploads/2022/02/filet-mignon-red-wine-sauce-final-plated.jpeg',\n    ingredients: 'Filet mignon, Red wine reduction sauce, Garlic mashed potatoes, Asparagus',\n    section: 'Dinner'\n  }, {\n    id: 2,\n    name: 'Lobster Ravioli with Saffron Cream Sauce',\n    price: '$29',\n    description: 'Handmade lobster-filled ravioli in a delicate saffron-infused cream sauce, garnished with fresh basil and grated Parmesan. Served with a side of garlic bread.',\n    image: 'https://img1.wsimg.com/isteam/ip/454a9109-bb4b-413c-84aa-8c1310a3d924/ravioli-0001.jpg/:/rs=w:1280',\n    ingredients: 'Lobster-filled ravioli, Saffron cream sauce, Fresh basil, Parmesan cheese, Garlic bread',\n    section: 'Dinner'\n  }, {\n    id: 3,\n    name: 'Pan-Seared Sea Bass with Lemon Beurre Blanc',\n    price: '$30',\n    description: 'Pan-seared sea bass with a velvety lemon beurre blanc sauce. Accompanied by quinoa pilaf and roasted Brussels sprouts.',\n    image: 'https://assets-global.website-files.com/6425f03eadc96686600b6d52/65037dfb29f7fb24d028bdde_Pan-Seared%20Sea%20Bass%20with%20Lemon%20Butter%20and%20Sauvignon%20Blanc.png',\n    ingredients: 'Sea bass, Lemon beurre blanc sauce, Quinoa pilaf, Roasted Brussels sprouts',\n    section: 'Dinner'\n  }]) */\n",
      "start": 1717261248137,
      "end": 1717261248496,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1717261248496,
      "end": 1717261248496,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1717261248496,
      "end": 1717261248496,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1717261248496,
      "end": 1717261248496,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1717261248496,
      "end": 1717261248496,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineStore } from \"pinia\";\nexport const useDinnerStore = defineStore(\n  \"dinnerStore\",\n  {\n    state: () => ({\n      // List of all meals\n      dinner_meals: []\n    }),\n    actions: {\n      async getDinner() {\n        let data = await $fetch(\"/api/menus/dinner\");\n        this.dinner_meals = data;\n        return data;\n      },\n      async createDinnerMeal(meal) {\n        let id = this.dinner_meals.length + 1;\n        meal.id = id;\n        await $fetch(\n          \"/api/menus/dinner/create\",\n          {\n            // $fetch sends request to api which sends it to database to add the new dinner meal\n            method: \"POST\",\n            //\"POST\" is an http method used to send data, in this case, to the API\n            body: meal\n          }\n        );\n        this.dinner_meals.push(meal);\n        console.log(\"Creating dinner meal for the following meal:\");\n        console.log(meal);\n      },\n      async editDinner(meal) {\n        let found = this.dinner_meals.find((p) => p.id === meal.id);\n        if (found) {\n          console.log(\"edit\" + found.name);\n          found.name = meal.name;\n          found.price = meal.price;\n          found.description = meal.description;\n          found.ingredients = meal.ingredients;\n          found.section = meal.section;\n          let id = found._id;\n          let edit_endpoint = `/api/menus/dinner/${id}`;\n          await $fetch(\n            edit_endpoint,\n            {\n              method: \"PUT\",\n              // \"PUT\" as well is an http method that sends data to be replaced/ updated\n              body: found\n            }\n          );\n        }\n      },\n      async deleteDinner(meal) {\n        let foundIndex = this.dinner_meals.findIndex((p) => p.id === meal.id);\n        let found = this.dinner_meals.find((p) => p.id === meal.id);\n        console.log(\"delete\" + meal.name);\n        if (foundIndex !== -1)\n          this.dinner_meals.splice(foundIndex, 1);\n        let id = found._id;\n        let delete_endpoint = `/api/menus/dinner/${id}`;\n        await $fetch(delete_endpoint, {\n          method: \"DELETE\"\n        });\n      }\n    }\n  }\n);\n",
      "start": 1717261248496,
      "end": 1717261248541,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/media/linux/833cfef0-7984-46f2-8f58-ee0be3a5d0782/DATA/XPS-DATA/DEV/WORKSPACE/PROJECTS/PARTNERSHIPS/IMPERAMAX/OFFERS/nuxt-restaurant-management-system/src/stores/dinner_menu.ts"
        ],
        "sourcesContent": [
          "import { defineStore } from \"pinia\";\n\nexport const useDinnerStore = defineStore('dinnerStore', {\n  state: () => ({\n\t\t// List of all meals\n\t\tdinner_meals: [] \n\t}),\n  actions: {\n \n  async getDinner() {\n    let data = await $fetch(\"/api/menus/dinner\") // meals gotten from the database\n      //\n  // 2 -- Use Javascript For - In Loop on data array to set dinner_meals to contain data's contents\n    this.dinner_meals = data\n    return data\n  },\n\n  async createDinnerMeal(meal) {\n    // Get Auto-increment ID\n    let id = this.dinner_meals.length + 1\n    // Assign ID to meal\n    meal.id = id\n    // POST Request\n    await $fetch( \"/api/menus/dinner/create\" ,  {\n        // $fetch sends request to api which sends it to database to add the new dinner meal\n      method: \"POST\", //\"POST\" is an http method used to send data, in this case, to the API\n      body: meal\n    }\n    )\n    this.dinner_meals.push(meal)\n    console.log(\"Creating dinner meal for the following meal:\")\n    console.log(meal)\n  },\n\n  async editDinner(meal) {\n    let found = this.dinner_meals.find(p => p.id === meal.id)\n    if (found) {\n      console.log('edit' + found.name)\n      found.name = meal.name\n      found.price = meal.price\n      found.description = meal.description\n      found.ingredients = meal.ingredients\n      found.section = meal.section\n      let id = found._id\n\n      let edit_endpoint = `/api/menus/dinner/${id}`\n\n      await $fetch(edit_endpoint, {\n          method: \"PUT\", // \"PUT\" as well is an http method that sends data to be replaced/ updated\n          body: found\n\n        }\n        )\n    }\n\n      \n  },\n\n  async deleteDinner(meal) {\n    let foundIndex = this.dinner_meals.findIndex(p => p.id === meal.id)\n    let found = this.dinner_meals.find(p => p.id === meal.id)\n    console.log('delete' + meal.name)\n    if (foundIndex !== -1) this.dinner_meals.splice(foundIndex, 1)\n\n    let id = found._id\n\n    let delete_endpoint = `/api/menus/dinner/${id}`\n      \n    await $fetch(delete_endpoint, {\n      method: \"DELETE\",\n      })\n\n  },\n\n}\n}\n) /* \n\n  \n\n  /* const dinner_meals = ref([{\n    id: 1,\n    name: 'Filet Mignon with Red Wine Reduction',\n    price: '$31',\n    description: 'Grilled filet mignon cooked to perfection, served with a rich red wine reduction sauce. Accompanied by garlic mashed potatoes and sautéed asparagus.',\n    image: 'https://www.gritsandpinecones.com/wp-content/uploads/2022/02/filet-mignon-red-wine-sauce-final-plated.jpeg',\n    ingredients: 'Filet mignon, Red wine reduction sauce, Garlic mashed potatoes, Asparagus',\n    section: 'Dinner'\n  }, {\n    id: 2,\n    name: 'Lobster Ravioli with Saffron Cream Sauce',\n    price: '$29',\n    description: 'Handmade lobster-filled ravioli in a delicate saffron-infused cream sauce, garnished with fresh basil and grated Parmesan. Served with a side of garlic bread.',\n    image: 'https://img1.wsimg.com/isteam/ip/454a9109-bb4b-413c-84aa-8c1310a3d924/ravioli-0001.jpg/:/rs=w:1280',\n    ingredients: 'Lobster-filled ravioli, Saffron cream sauce, Fresh basil, Parmesan cheese, Garlic bread',\n    section: 'Dinner'\n  }, {\n    id: 3,\n    name: 'Pan-Seared Sea Bass with Lemon Beurre Blanc',\n    price: '$30',\n    description: 'Pan-seared sea bass with a velvety lemon beurre blanc sauce. Accompanied by quinoa pilaf and roasted Brussels sprouts.',\n    image: 'https://assets-global.website-files.com/6425f03eadc96686600b6d52/65037dfb29f7fb24d028bdde_Pan-Seared%20Sea%20Bass%20with%20Lemon%20Butter%20and%20Sauvignon%20Blanc.png',\n    ingredients: 'Sea bass, Lemon beurre blanc sauce, Quinoa pilaf, Roasted Brussels sprouts',\n    section: 'Dinner'\n  }]) */\n"
        ],
        "mappings": "AAAA,SAAS,mBAAmB;AAErB,aAAM,iBAAiB;AAAA,EAAY;AAAA,EAAe;AAAA,IACvD,OAAO,OAAO;AAAA;AAAA,MAEd,cAAc,CAAC;AAAA,IAChB;AAAA,IACC,SAAS;AAAA,MAET,MAAM,YAAY;AAChB,YAAI,OAAO,MAAM,OAAO,mBAAmB;AAG3C,aAAK,eAAe;AACpB,eAAO;AAAA,MACT;AAAA,MAEA,MAAM,iBAAiB,MAAM;AAE3B,YAAI,KAAK,KAAK,aAAa,SAAS;AAEpC,aAAK,KAAK;AAEV,cAAM;AAAA,UAAQ;AAAA,UAA8B;AAAA;AAAA,YAE1C,QAAQ;AAAA;AAAA,YACR,MAAM;AAAA,UACR;AAAA,QACA;AACA,aAAK,aAAa,KAAK,IAAI;AAC3B,gBAAQ,IAAI,8CAA8C;AAC1D,gBAAQ,IAAI,IAAI;AAAA,MAClB;AAAA,MAEA,MAAM,WAAW,MAAM;AACrB,YAAI,QAAQ,KAAK,aAAa,KAAK,OAAK,EAAE,OAAO,KAAK,EAAE;AACxD,YAAI,OAAO;AACT,kBAAQ,IAAI,SAAS,MAAM,IAAI;AAC/B,gBAAM,OAAO,KAAK;AAClB,gBAAM,QAAQ,KAAK;AACnB,gBAAM,cAAc,KAAK;AACzB,gBAAM,cAAc,KAAK;AACzB,gBAAM,UAAU,KAAK;AACrB,cAAI,KAAK,MAAM;AAEf,cAAI,gBAAgB,qBAAqB,EAAE;AAE3C,gBAAM;AAAA,YAAO;AAAA,YAAe;AAAA,cACxB,QAAQ;AAAA;AAAA,cACR,MAAM;AAAA,YAER;AAAA,UACA;AAAA,QACJ;AAAA,MAGF;AAAA,MAEA,MAAM,aAAa,MAAM;AACvB,YAAI,aAAa,KAAK,aAAa,UAAU,OAAK,EAAE,OAAO,KAAK,EAAE;AAClE,YAAI,QAAQ,KAAK,aAAa,KAAK,OAAK,EAAE,OAAO,KAAK,EAAE;AACxD,gBAAQ,IAAI,WAAW,KAAK,IAAI;AAChC,YAAI,eAAe;AAAI,eAAK,aAAa,OAAO,YAAY,CAAC;AAE7D,YAAI,KAAK,MAAM;AAEf,YAAI,kBAAkB,qBAAqB,EAAE;AAE7C,cAAM,OAAO,iBAAiB;AAAA,UAC5B,QAAQ;AAAA,QACR,CAAC;AAAA,MAEL;AAAA,IAEF;AAAA,EACA;AACA;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1717261248541,
      "end": 1717261248541,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1717261248541,
      "end": 1717261248541,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1717261248541,
      "end": 1717261248541,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1717261248541,
      "end": 1717261248541,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261248542,
      "end": 1717261248542,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1717261248542,
      "end": 1717261248542,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1717261248542,
      "end": 1717261248542,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1717261248542,
      "end": 1717261248542,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1717261248542,
      "end": 1717261248542,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1717261248543,
      "end": 1717261248543,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1717261248543,
      "end": 1717261248543,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1717261248543,
      "end": 1717261248543,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1717261248543,
      "end": 1717261248543,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1717261248543,
      "end": 1717261248543,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1717261248543,
      "end": 1717261248543,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1717261248543,
      "end": 1717261248543,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1717261248543,
      "end": 1717261248543,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1717261248543,
      "end": 1717261248543,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1717261248543,
      "end": 1717261248543,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1717261248544,
      "end": 1717261248548,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1717261248548,
      "end": 1717261248548,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1717261248549,
      "end": 1717261248549,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1717261248549,
      "end": 1717261248549,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1717261248549,
      "end": 1717261248549,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1717261248549,
      "end": 1717261248549,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1717261248549,
      "end": 1717261248549,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1717261248549,
      "end": 1717261248550,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1717261248550,
      "end": 1717261248550,
      "order": "normal"
    }
  ]
}
